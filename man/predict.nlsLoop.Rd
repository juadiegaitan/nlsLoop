% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nlsLoopPreds.R
\name{predict.nlsLoop}
\alias{predict.nlsLoop}
\title{Creates a predictions dataframe from a nlsLoop parameter results dataframe.}
\usage{
\method{predict}{nlsLoop}(data, param_data, id_col, FUN, param_x, x, gap, ...)
}
\arguments{
\item{data}{raw data frame}

\item{param_data}{data frame containing the parameters from nlsLoop() or similar format}

\item{id_col}{column name of looping factor in raw data frame}

\item{FUN}{Function name}

\item{param_x}{independent variable in the nlsLoop model}

\item{x}{name of the independent variable in the raw data frame}

\item{gap}{the gap desired between prediction data points}

\item{...}{extra arguments to pass to FUN}
}
\value{
returns a dataframe of predictive values, \code{y} for each value of \code{id_col} and \code{x}
}
\description{
Uses the parameters from the results from nlsLoop and the original dataframe to create a predictions dataframe allowing for smooth fitting to the raw data.
}
\note{
uses the minimum and maximum values of \code{x} for each value of \code{id_col} to predict extrapolation of non-linear fits to values not given by the data
}
\examples{

library(TeamPhytoplankton)

data(PI_data)

fit <- nlsLoop(PI_data,
         GPP ~ Eilers_PI(Pmax, Iopt, a, I = light),
         tries = 10,
         id_col = 'temp',
         r2 = 'Y',
         supp.errors = 'Y',
         param_bds = c(0,20000, 0,1000, 0, 500))

predictions <- predict.nlsLoop(PI_data, fit, id_col = 'temp', FUN = 'Eilers_PI', param_x = 'I', x = 'light', gap = 1)
}
\author{
Daniel Padfield
}
\seealso{
\code{\link{nlsLoop}} for details on shotgunning fits using non-linear least squares regression
}

